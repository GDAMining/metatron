# Generated by Django 4.0.4 on 2023-03-01 14:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('collection_id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('insertion_time', models.TimeField()),
                ('username', models.TextField()),
                ('name_space', models.TextField()),
            ],
            options={
                'db_table': 'collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('concept_url', models.TextField(primary_key=True, serialize=False)),
                ('concept_name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'concept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('document_id', models.TextField(primary_key=True, serialize=False)),
                ('language', models.TextField()),
                ('provenance', models.TextField()),
                ('document_content', models.JSONField()),
                ('batch', models.IntegerField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'document',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mention',
            fields=[
                ('start', models.IntegerField(primary_key=True, serialize=False)),
                ('stop', models.IntegerField()),
                ('language', models.TextField()),
                ('mention_text', models.TextField()),
            ],
            options={
                'db_table': 'mention',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NameSpace',
            fields=[
                ('name_space', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'name_space',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nanpublication',
            fields=[
                ('doi', models.TextField(primary_key=True, serialize=False)),
                ('language', models.TextField()),
                ('nanopub_content', models.TextField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'nanpublication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SemanticArea',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'semantic_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('username', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=32)),
                ('orcid', models.TextField(blank=True, null=True)),
                ('ncbi_key', models.TextField(blank=True, null=True)),
                ('profile', models.TextField()),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vocabulary',
            fields=[
                ('type', models.TextField()),
                ('name', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vocabulary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AddConcept',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.user')),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'add_concept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Annotate',
            fields=[
                ('language', models.TextField()),
                ('start', models.OneToOneField(db_column='start', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.mention')),
                ('stop', models.IntegerField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'annotate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnnotateLabel',
            fields=[
                ('language', models.TextField()),
                ('name', models.OneToOneField(db_column='name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.label')),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'annotate_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Associate',
            fields=[
                ('language', models.TextField()),
                ('start', models.OneToOneField(db_column='start', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.mention')),
                ('stop', models.IntegerField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'associate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreateFact',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.user')),
                ('language', models.TextField()),
                ('predicate_concept_url', models.TextField()),
                ('object_concept_url', models.TextField()),
                ('subject_concept_url', models.TextField()),
                ('subject_name', models.TextField()),
                ('predicate_name', models.TextField()),
                ('object_name', models.TextField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'create_fact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroundTruthLogFile',
            fields=[
                ('document_id', models.OneToOneField(db_column='document_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.document')),
                ('language', models.TextField()),
                ('insertion_time', models.TimeField()),
                ('gt_json', models.JSONField()),
                ('revised', models.BooleanField()),
            ],
            options={
                'db_table': 'ground_truth_log_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HasArea',
            fields=[
                ('concept_url', models.OneToOneField(db_column='concept_url', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.concept')),
            ],
            options={
                'db_table': 'has_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HasLabel',
            fields=[
                ('name', models.OneToOneField(db_column='name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.label')),
            ],
            options={
                'db_table': 'has_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.user')),
                ('subject_document_id', models.TextField()),
                ('object_document_id', models.TextField()),
                ('predicate_document_id', models.TextField()),
                ('object_language', models.TextField()),
                ('predicate_language', models.TextField()),
                ('subject_language', models.TextField()),
                ('subject_start', models.IntegerField()),
                ('subject_stop', models.IntegerField()),
                ('predicate_start', models.IntegerField()),
                ('predicate_stop', models.IntegerField()),
                ('object_start', models.IntegerField()),
                ('object_stop', models.IntegerField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelationshipObjConcept',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.user')),
                ('subject_document_id', models.TextField()),
                ('subject_language', models.TextField()),
                ('predicate_document_id', models.TextField()),
                ('predicate_language', models.TextField()),
                ('subject_start', models.IntegerField()),
                ('subject_stop', models.IntegerField()),
                ('predicate_start', models.IntegerField()),
                ('predicate_stop', models.IntegerField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'relationship_obj_concept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelationshipObjMention',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.user')),
                ('language', models.TextField()),
                ('stop', models.IntegerField()),
                ('predicate_concept_url', models.TextField()),
                ('subject_concept_url', models.TextField()),
                ('subject_name', models.TextField()),
                ('predicate_name', models.TextField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'relationship_obj_mention',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelationshipPredConcept',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.user')),
                ('subject_document_id', models.TextField()),
                ('subject_language', models.TextField()),
                ('object_document_id', models.TextField()),
                ('object_language', models.TextField()),
                ('subject_start', models.IntegerField()),
                ('subject_stop', models.IntegerField()),
                ('object_start', models.IntegerField()),
                ('object_stop', models.IntegerField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'relationship_pred_concept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelationshipPredMention',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.user')),
                ('language', models.TextField()),
                ('stop', models.IntegerField()),
                ('subject_concept_url', models.TextField()),
                ('object_concept_url', models.TextField()),
                ('insertion_time', models.TimeField()),
                ('subject_name', models.TextField()),
                ('object_name', models.TextField()),
            ],
            options={
                'db_table': 'relationship_pred_mention',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelationshipSubjConcept',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.user')),
                ('predicate_document_id', models.TextField()),
                ('predicate_language', models.TextField()),
                ('object_document_id', models.TextField()),
                ('object_language', models.TextField()),
                ('predicate_start', models.IntegerField()),
                ('predicate_stop', models.IntegerField()),
                ('object_start', models.IntegerField()),
                ('object_stop', models.IntegerField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'relationship_subj_concept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelationshipSubjMention',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.user')),
                ('language', models.TextField()),
                ('stop', models.IntegerField()),
                ('predicate_name', models.TextField()),
                ('object_name', models.TextField()),
                ('predicate_concept_url', models.TextField()),
                ('object_concept_url', models.TextField()),
                ('insertion_time', models.TimeField()),
            ],
            options={
                'db_table': 'relationship_subj_mention',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShareCollection',
            fields=[
                ('collection_id', models.OneToOneField(db_column='collection_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.collection')),
                ('status', models.TextField()),
            ],
            options={
                'db_table': 'share_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VocabularyHasConcept',
            fields=[
                ('concept_url', models.OneToOneField(db_column='concept_url', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='RelAnno_App.concept')),
                ('type', models.TextField()),
            ],
            options={
                'db_table': 'vocabulary_has_concept',
                'managed': False,
            },
        ),
    ]
